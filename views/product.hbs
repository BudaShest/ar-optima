<!doctype html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Товар</title>
    <script defer src="/js/script.js"></script>
    <link rel="stylesheet" href="/css/style.css">

    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
    <script type="module" defer src="/js/three.js"></script>
</head>
<body>
    {{>modalMenu}}
    <div class="wrapper wrapper-main {{#if product.productDemoPath}}wrapper-product{{/if}}">
        {{>headerLight}}
        {{#if product.productDemoPath}}
        <div class="volume-view"></div>
        {{/if}}
        <main class="main">
            {{#with product}}

                <div class="current-product-container col">
                    <div class="current-product-top row">
                        <div class="col current-product-image">
                            <img src="/img/uploads/{{image}}" alt="">
                        </div>
                        <div class="col current-product-header">

                            <h2 id="product-header" data-target="{{productDemoPath}}">{{name}}</h2>

                            <h3>{{second_name}}</h3>

                            <div class="current-product-author row">
                                <span>{{firstname}} {{surname}}</span>
                            </div>
                        </div>
                    </div>
                    <div class="current-product-text">
                        <h4>Описание:</h4>
                        <p>{{inputHTML description}}</p>
                        <div class="row">
                            <span class="current-product-price">{{price}}₽</span>
                            {{#if isAuthorized}}
                            <form action="" method="post">
                                <button name="productBuyBtn" value="{{id}}" id="buy-btn">Купить</button>
                            </form>
                            {{/if}}
                        </div>
                    </div>
                </div>
            {{/with}}
            <h3>Другие товары и услуги</h3>
            <p>Вертикальные свайпы - навигация по категориям,горизонтальные свайпы - другие позиции в данное категории</p>
            {{>bottomSlider}}
        </main>
        {{>footer}}
    </div>
    <script type="module">
        import Swiper from 'https://unpkg.com/swiper/swiper-bundle.esm.browser.min.js'
        const swiper = new Swiper('.swiper-container',{
            direction: 'vertical',
            loop:true,

            pagination:{
                el:'.swiper-pagination',
            },


        });

        const horizontalSwiper = new Swiper('.swiper-horizontal-container',{
            loop:true,
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            slidesPerView:3
        });
    </script>

    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>

    <script src="/js/three.js"></script>
    <script type="module">
        import {GLTFLoader} from '/js/three.js-master/examples/jsm/loaders/GLTFLoader.js';
        import {OrbitControls} from '/js/three.js-master/examples/jsm/controls/OrbitControls.js';
        //Глобальные константы
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );
        const renderer = new THREE.WebGLRenderer();
        const container = document.querySelector('.volume-view');

        //GLTF - загрузчик
        const loader = new GLTFLoader();
        let pathToFile = '/3d/' + document.querySelector('#product-header').dataset.target;

        loader.load(pathToFile,function (glb){
            console.log(glb);
            const root = glb.scene;
            root.scale.set(0.1,0.1,0.1);
            scene.add(root);
        },function (xhr){
            console.log((xhr.loaded/xhr.total * 100) + "% загружуено")
        },function (error){
            console.log('Ошибка: ' + error)
        })

        //Контроль вращения
        const controls = new OrbitControls(camera,renderer.domElement);
        controls.update();
        controls.enableDamping = true;
        controls.minDistance = 0.5;
        controls.maxDistance = 5;

        //Свет
        const light = new THREE.DirectionalLight(0xffffff,1);
        light.position.set(2,2,5);
        scene.add(light);

        const light2 = new THREE.PointLight(0xffffff,1);
        light2.position.set(0,10,20);
        scene.add(light2);

        const light3 = new THREE.PointLight(0xffffff,1);
        light3.position.set(20,10,20);
        scene.add(light3);

        const light4 = new THREE.PointLight(0xffffff,1);
        light4.position.set(0,-10,20);
        scene.add(light4);

        const light5 = new THREE.PointLight(0xffffff,1);
        light5.position.set(0,-10,-20);
        scene.add(light5);

        const light6 = new THREE.PointLight(0xffffff,1);
        light6.position.set(-20,10,-20);
        scene.add(light6);

        //Рендер
        console.log(parseInt(getComputedStyle(container).width));
        renderer.setSize(window.innerWidth, window.innerHeight);
        container.appendChild( renderer.domElement );



        camera.position.z = 5;

        const animate = function () {
            requestAnimationFrame( animate );

            controls.update();
            renderer.render( scene, camera );
        };

        function onWindowResize(){
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();

            renderer.setSize(window.innerWidth, window.innerHeight);
        }

        window.onresize = onWindowResize;

        animate();
    </script>
</body>
</html>